<launch>

   <!-- launch for gamma ft sensor for simulation -->


    <param name="robot_description" command="$(find xacro)/xacro.py $(find force_torque_sensor)/robot/gamma.urdf.xacro"/>

  <param name="publish_frequency" value="1000"/>
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_tf_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- EXAMPLE FOR gamma -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find force_torque_sensor)/worlds/simple_environment.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>  



    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model gamma"  respawn="false" output="screen" /> 



  <node name="ft_sensor_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find force_torque_sensor)/launch/my_config_rviz.rviz" output="screen"/>
  
           
 
 <group ns="my_sensor"> 

<!--     <filter type="MultiChannelTransferFunctionFilter" name="LowPass">
        <params a="1.0 0.5" b="0.2 0.2"/>
    </filter> -->

    <param name="ft_sensor_params_name" value="force_torque_sensor_controller_params/" />

    <param name="imu_sensor_params_name" value="imu_sensor_params/" />

    <rosparam command="load" file="$(find force_torque_sensor)/config/LowPass_Filter.yaml" />

    <rosparam command="load" file="$(find force_torque_sensor)/config/ft_sensor_params.yaml" />

    <rosparam command="load" file="$(find force_torque_sensor)/config/imu_sensor_params.yaml" />

   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/hardware_interface.yaml" />
   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/joint_names.yaml" />
   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/force_torque_sensor_controller.yaml" /> 

   <node name="force_torque_sensor_sim_ros_control" pkg="force_torque_sensor" type="force_torque_sensor_sim_ros_control_node" output="screen">
  
   </node>  

  <node name="force_torque_sensor_controller_spawner" pkg="controller_manager" type="spawner" ns="force_torque_sensor_controller" respawn="false" output="screen" args="force_torque_sensor_controller" >   
      </node>  

     <node name="force_torque_sensor_filtering" pkg="force_torque_sensor" type="force_torque_sensor_filter_node" output="screen">
     
   </node>  

  <node name="imu_sensor_filtering" pkg="force_torque_sensor" type="imu_sensor_filter_node" output="screen" respawn="true" >
     
   </node>        
   </group> 
</launch>