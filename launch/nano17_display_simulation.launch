<launch>

  <!-- launch for nano 17 ft sensor for simulation -->

  <!-- enable/disable gui at will, the rviz listens to the simulation -->


    <param name="robot_description" command="$(find xacro)/xacro.py $(find force_torque_sensor)/robot/nano17.urdf.xacro"/>

  <param name="publish_frequency" value="1000"/>
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_tf_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- EXAMPLE FOR nano17 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find force_torque_sensor)/worlds/simple_environment.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>  


    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model nano17"  respawn="false" output="screen" /> 



  <node name="ft_sensor_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find force_torque_sensor)/launch/my_config_rviz.rviz" output="screen"/>


 <group ns="my_sensor"> 


   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/hardware_interface.yaml" />
   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/joint_names.yaml" />
   <rosparam command="load" ns="force_torque_sensor_controller" file="$(find force_torque_sensor)/config/force_torque_sensor_controller.yaml" /> 

        <node name="force_torque_sensor_sim_ros_control" pkg="force_torque_sensor" type="force_torque_sensor_sim_ros_control_node" output="screen">
        </node>  


      <node name="force_torque_sensor_controller_spawner" pkg="controller_manager" type="spawner" ns="force_torque_sensor_controller" respawn="false" output="screen" args="force_torque_sensor_controller" />   
<!--     <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner"  ns="force_torque_sensor_controller" respawn="false" output="screen"  args="joint_state_controller " />  -->
  

 
   </group> 
<!--      <node name="rqt_plot_view_force" pkg="rqt_plot" type="rqt_plot" args="-e my_sensor/ft_sensor_topic/wrench/force" />
  <node name="rqt_plot_view_torque" pkg="rqt_plot" type="rqt_plot" args="-e my_sensor/ft_sensor_topic/wrench/torque" /> -->

</launch>